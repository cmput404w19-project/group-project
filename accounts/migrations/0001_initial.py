# Generated by Django 2.1.7 on 2019-03-28 22:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(default='', max_length=100)),
                ('contentType', models.CharField(choices=[('text/markdown', 'text/markdown'), ('text/plain', 'text/plain'), ('application/base64', 'application/base64'), ('image/png;base64', 'image/png;base64'), ('image/jpeg;base64', 'image/jpeg;base64')], default='text/plain', max_length=20)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalServer',
            fields=[
                ('server_url', models.URLField(primary_key=True, serialize=False)),
                ('user', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower_url', models.URLField(default='')),
                ('following_url', models.URLField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_status', models.CharField(choices=[('Accept', 'Accept'), ('Decline', 'Decline'), ('Pending', 'Pending')], default='Pending', max_length=20)),
                ('request_publish_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=80)),
                ('description', models.CharField(default='', max_length=200)),
                ('source', models.URLField(default='')),
                ('origin', models.URLField(default='')),
                ('contentType', models.CharField(choices=[('text/markdown', 'text/markdown'), ('text/plain', 'text/plain'), ('application/base64', 'application/base64'), ('image/png;base64', 'image/png;base64'), ('image/jpeg;base64', 'image/jpeg;base64')], default='text/plain', max_length=20)),
                ('content', models.TextField(default='')),
                ('category', models.CharField(default='', max_length=80)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'PUBLIC'), ('FOAF', 'FOAF'), ('FRIENDS', 'FRIENDS'), ('PRIVATE', 'PRIVATE'), ('SERVERONLY', 'SERVERONLY')], default='PUBLIC', max_length=20)),
                ('unlisted', models.BooleanField(default=False)),
                ('image64', models.ImageField(default='', upload_to='usr_img/')),
                ('file64', models.FileField(default='', upload_to='usr_file/')),
                ('refPost', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PostVisibleTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Post')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('author_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('displayName', models.CharField(default='', max_length=20)),
                ('bio', models.CharField(default='', max_length=100)),
                ('host', models.CharField(default='', max_length=50)),
                ('github', models.URLField(default='')),
                ('url', models.URLField(default='')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='postvisibleto',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile'),
        ),
        migrations.AddField(
            model_name='post',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile'),
        ),
        migrations.AddField(
            model_name='friendrequest',
            name='requestedBy_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestedBY', to='accounts.UserProfile'),
        ),
        migrations.AddField(
            model_name='friendrequest',
            name='requestedTo_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestedTO', to='accounts.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile'),
        ),
        migrations.AlterUniqueTogether(
            name='postvisibleto',
            unique_together={('post_id', 'user_id')},
        ),
        migrations.AlterUniqueTogether(
            name='friendrequest',
            unique_together={('requestedBy_id', 'requestedTo_id')},
        ),
    ]
